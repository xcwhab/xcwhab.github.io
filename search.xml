<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>9.18 模拟赛#20</title>
    <url>/2023/09/18/9-18-%E6%A8%A1%E6%8B%9F%E8%B5%9B-20/</url>
    <content><![CDATA[<h2 id="T1"><a href="#T1" class="headerlink" title="T1"></a><a href="http://oiclass.com/d/tigao/p/P3985">T1</a></h2><p>手玩后发现第一个人的最后个数最多，易证。</p>
<p>然后考虑别人给了他多少贡献，应为 $\frac{m}{3}+\frac{\frac{m}{3} }{3}+\frac{a_n}{3}$。其中 $a_n$ 为 $n$ 开始分前的数量。</p>
<p>发现 $\forall \ 2 \le i \le n,a_i&#x3D;\frac{\frac{ {\frac{a_1}{3}+a_2} }{3}\dots +a_n}{3}$，只有部分数字对它有贡献，$O(log_3 n)$ 即可。</p>
<p>tips：向下取整时 $\frac{\frac{x}{3} }{3} \neq \frac{x}{9}$。</p>
<p><a href="http://oiclass.com/d/tigao/record/6507ed115805e14578718e03">code</a></p>
<h2 id="T2"><a href="#T2" class="headerlink" title="T2"></a><a href="http://oiclass.com/d/tigao/p/P3986">T2</a></h2><p>通过不算一个数的值想到容斥，于是考虑每个值要不算几次。</p>
<p>首先把每个限制按照 $y$ 分类，然后根据 $x,y$ 的大小关系算情况，然后减去同时以两个关键点为两个端点的情况。</p>
<p>特别注意的是，当 $x&#x3D;y$ 时，情况要加上 $n$；减去的值为 $sum(x &lt; n)+sum(x &gt; n)+[x&#x3D;n] \times (sum(x &lt; n)+sum(x &gt; n))$</p>
<p><a href="http://oiclass.com/d/tigao/record/6507ae065805e1457871480f">code</a></p>
<h2 id="T4"><a href="#T4" class="headerlink" title="T4"></a><a href="http://oiclass.com/d/tigao/p/P3988">T4</a></h2><p>先上结论：$a$ 树（权值为 $a$ 的树）与 $b$ 树的数量相等。</p>
<p>证明：</p>
<p>设树的大小为 $n$ 。</p>
<p>对于 $a$ 树，</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>题解</category>
      </categories>
  </entry>
  <entry>
    <title>CF1593E Gardener and Tree 题解</title>
    <url>/2022/05/27/CF1593E-Gardener-and-Tree-%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1593E">原题面</a></p>
<h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给出一个 $n$ 个点的树，删除 $k$ 次叶子节点，求剩下的节点数。</p>
<h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>设 $cnt_i$ 为 $k$ 最小为多少时点 $i$ 会被删除。</p>
<p>当 $i$ 将要被删除时，它一定是现在的叶子，联想到拓扑排序的特点，直接跑一遍拓扑排序即可。</p>
<p>初始时所有叶子的 $cnt$ 都为 $1$，跑完拓扑排序后遍历一遍 $cnt$ 数组统计 $cnt_i &gt; k$ 的数量，时间复杂度 $O(n)$。</p>
<p>code：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">4e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> t,n,k,cnt[N],d[N],ans;</span><br><span class="line"><span class="type">bool</span> f[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; g[N];</span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">		ans=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line">		<span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="built_in">sizeof</span>(d));</span><br><span class="line">		<span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="built_in">sizeof</span>(cnt));</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)g[i].<span class="built_in">clear</span>();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,x,y;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">			g[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">			g[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">			d[x]++,d[y]++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(k==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(d[i]==<span class="number">1</span>)q.<span class="built_in">push</span>(i),f[i]=cnt[i]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> t=q.<span class="built_in">front</span>(); </span><br><span class="line">			q.<span class="built_in">pop</span>();</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;g[t].<span class="built_in">size</span>();i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> v=g[t][i];</span><br><span class="line">				<span class="keyword">if</span>(f[v])<span class="keyword">continue</span>;</span><br><span class="line">				d[v]--;</span><br><span class="line">				<span class="keyword">if</span>(d[v]==<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					f[v]=<span class="number">1</span>;</span><br><span class="line">					cnt[v]=cnt[t]+<span class="number">1</span>;</span><br><span class="line">					q.<span class="built_in">push</span>(v);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(cnt[i]&gt;k)ans++;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>题解</category>
      </categories>
  </entry>
  <entry>
    <title>CF1703E Mirror Grid 题解</title>
    <url>/2022/07/15/CF1703E-Mirror-Grid-%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h1><p>给出一个由 $0,1$ 组成的矩阵，求最少改变矩阵中的多少个数，使得矩阵旋转 $0^\circ , 90^\circ , 180^\circ , 270^\circ$ 后相同。</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>在一个 $n \times n$ 的矩阵中，对于任意一点 $P(i,j)$ 旋转 $90^\circ , 180^\circ , 270^\circ$ 后的对应点分别位于 $P_1(j,n-i+1),P_2(n-i+1,n-j+1),P_3(n-j+1,i)$。所以只要让矩阵内所有的对应点相等， 矩阵在旋转后就会相同。</p>
<p>但是，当 $n$ 为奇数时，循环就会出现少加或多加的情况，所以需要特判。</p>
<p>综上，对于每个 $P$，求出最少需要改变多少个数，使 $P$ 和他所有的对应点相等， 当 $n$ 是奇数时特判，求和即为答案。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,t,a[<span class="number">110</span>][<span class="number">110</span>],ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		ans=<span class="number">0</span>;</span><br><span class="line">		cin&gt;&gt;n;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">char</span> ch;</span><br><span class="line">				cin&gt;&gt;ch;</span><br><span class="line">				a[i][j]=ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n/<span class="number">2</span>;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n/<span class="number">2</span>;j++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> cnt=a[i][j]+a[n-j+<span class="number">1</span>][i]+a[j][n-i+<span class="number">1</span>]+a[n-i+<span class="number">1</span>][n-j+<span class="number">1</span>];<span class="comment">//求对应点</span></span><br><span class="line">				ans+=<span class="built_in">min</span>(cnt,<span class="number">4</span>-cnt);<span class="comment">//求和</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>)<span class="comment">//特判</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=(n+<span class="number">1</span>)/<span class="number">2</span>;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> j=(n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">				<span class="type">int</span> cnt=a[i][j]+a[n-j+<span class="number">1</span>][i]+a[j][n-i+<span class="number">1</span>]+a[n-i+<span class="number">1</span>][n-j+<span class="number">1</span>];</span><br><span class="line">				ans+=<span class="built_in">min</span>(cnt,<span class="number">4</span>-cnt);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>题解</category>
      </categories>
  </entry>
  <entry>
    <title>CF1861C Queries for the Array 题解</title>
    <url>/2023/09/06/CF1861C-Queries-for-the-Array-%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p>因为插入和删除操作都在队尾，所以对序列前缀分析一下：</p>
<ol>
<li>若一个序列的答案为 <code>YES</code>，那么它前缀的答案也为 <code>YES</code>。（对于没检查过的序列）</li>
<li>若一个序列的答案为 <code>NO</code>，那么它前缀的答案不确定。（对于没检查过的序列）</li>
<li>若一个序列的某个前缀的答案为 <code>NO</code>，那么它的答案为 <code>No</code>。</li>
</ol>
<p>根据第一点，维护最后一个答案为 <code>YES</code> 的前缀的下标；根据二、三点，维护第一个答案为 <code>NO</code> 的前缀的下标。对于四种情况分讨即可。</p>
<p>code：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> iinf=<span class="number">2147483647</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> t,len,min0,max1,nl;</span><br><span class="line"><span class="type">bool</span> flag;</span><br><span class="line"><span class="type">char</span> ch[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		flag=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//    最后YES    首个No   序列长</span></span><br><span class="line">		max1=<span class="number">-1</span>,min0=iinf,nl=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line">		len=<span class="built_in">strlen</span>(ch);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(ch[i]==<span class="string">&#x27;+&#x27;</span>)nl++;</span><br><span class="line">			<span class="keyword">if</span>(ch[i]==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(max1==nl)max1--;</span><br><span class="line">				<span class="keyword">if</span>(min0==nl)min0=iinf;</span><br><span class="line">				nl--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(ch[i]==<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(nl&lt;=<span class="number">1</span>||max1==nl)</span><br><span class="line">				&#123;</span><br><span class="line">					flag=<span class="number">1</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				min0=<span class="built_in">min</span>(min0,nl);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(ch[i]==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(nl&gt;<span class="number">1</span>&amp;&amp;min0&lt;=nl)</span><br><span class="line">				&#123;</span><br><span class="line">					flag=<span class="number">1</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				max1=nl;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag)<span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>题解</category>
      </categories>
  </entry>
  <entry>
    <title>CF1872C Non-coprime Split 题解</title>
    <url>/2023/09/18/CF1872C-Non-coprime-Split-%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p>一个很怪的分讨想法。</p>
<p>当 $l \neq r$ 时，区间内一定有一个偶数。设最大的偶数为 $x$ ，那么当 $x &gt; 2$ 时，可以得到一组解 $(2,x-2)$，此时 $\gcd(2,x-2) &#x3D; 2$。</p>
<p>当 $l &#x3D; r$ 时，问题转化为找 $a+b&#x3D;l$ 且 $\gcd(a,b) \neq 1$ 的一组解。当 $l$ 不为质数时，设有 $l$ 的因数 $x$，那么 $(x,l-x)$ 是一组解，此时 $\gcd(x,l-x)$ 一定不为 1。</p>
<p>剩余情况无解，时间复杂度 $O(t\sqrt l)$。</p>
<p>code：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t,l,r;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;r);</span><br><span class="line">		<span class="keyword">if</span>(l!=r)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> cnt=r-r%<span class="number">2</span>;</span><br><span class="line">			<span class="keyword">if</span>(cnt==<span class="number">2</span>)<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">			<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,<span class="number">2</span>,cnt<span class="number">-2</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">bool</span> f=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=l;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(l%i)<span class="keyword">continue</span>;</span><br><span class="line">				f=<span class="number">1</span>;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,l-i);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!f)<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>题解</category>
      </categories>
  </entry>
  <entry>
    <title>CF1870B Friendly Arrays 题解</title>
    <url>/2023/09/20/CF1870B-Friendly-Arrays-%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h2><p>给出长度为 $n$ 的序列 $a$ 和长度为 $m$ 的序列 $b$，选出 $b$ 中的任意个数（可以不选），让 $a$ 的每个数都或上它们，求 $a_1 \oplus a_2 \oplus \dots \oplus a_n$ 的最大值和最小值。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>令 $x&#x3D;a_1 \oplus a_2 \oplus \dots \oplus a_n$。</p>
<p>当 $m&#x3D;1$ 时，如果选择 $b_1$，每个 $a_i$ 在 $b_1$ 每位为 $1$ 的二进制位上也为 $1$，此时 $x$ 在这些位上的值取决于 $n$ 的奇偶性（$n$ 个 $1$ 异或）。取消 $m$ 的限制，可以发现，每多取一个 $b_i$，$x$ 只会不断变大或变小。</p>
<p>当 $n$ 为偶数时，$x$ 会不断变小，全部不选时值最大，全选时值最小；</p>
<p>当 $n$ 为奇数时，$x$ 会不断变大，全选时值最小，全部不选时值最大。</p>
<p>code：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> t,n,m,a[N],b[N],suma,sumb;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		suma=sumb=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]),suma^=a[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]),sumb|=b[i];</span><br><span class="line">		<span class="keyword">if</span>(n%<span class="number">2</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,suma,suma|sumb);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,(suma|sumb)-sumb,suma);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>题解</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/09/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>Trie学习笔记</title>
    <url>/2023/09/28/Trie%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Trie树可以快速查找字符串，通过合并前缀来节省空间，一般用于解决字符串和最大异或和（01Trie）问题。</p>
<p>一般在插入字符串时，会在串的尾部打上标记，用于统计类问题。</p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="P8511-Ynoi-Easy-Round-2021-TEST-68"><a href="#P8511-Ynoi-Easy-Round-2021-TEST-68" class="headerlink" title="P8511 [Ynoi Easy Round 2021] TEST_68"></a><a href="https://www.luogu.com.cn/problem/P8511">P8511 [Ynoi Easy Round 2021] TEST_68</a></h2><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        解析
    </div>
    <div class='spoiler-content'>
        <h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>假设在树上任取两点，当两点异或值最大时，点的编号为 $x$ 和 $y$，那么子树内不包含这两个点的点的答案都为 $a_x \oplus a_y$。</p>
<p>可以发现这些点都不在 $x \to 1$ 和 $y \to 1$ 上，于是对这两类点分讨。</p>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>全部数中的异或最大值显然可以用 01Trie 解决，于是先预处理 $x$ 和 $y$，然后暴力找到 $x \to 1$ 和 $y \to 1$。对于这两条路径，从根开始遍历，每次把每个非链上的儿子所在的子树加入 $trie$，然后再顺着链往下跑。</p>
<p>因为 $x,y$ 都不固定，所以每次加入时都要查询一次并取最值。</p>
<p>code:(耗时 5h T^T)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#define int long long</span></span><br><span class="line"><span class="comment">//#define int unsigned long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//const int p=415411;</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> iinf=<span class="number">2147483647</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> linf=<span class="number">9223372036854775807</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,fa[N],mx,my,nxt[N];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[N],ans[N],maxn;</span><br><span class="line"><span class="type">bool</span> fl[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; g[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Trie</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> len=<span class="number">1</span>,t[N*<span class="number">64</span>][<span class="number">2</span>],g[<span class="number">70</span>],end[N*<span class="number">64</span>];</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		maxn=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">memset</span>(t,<span class="number">0</span>,<span class="built_in">sizeof</span>(t));</span><br><span class="line">		<span class="built_in">memset</span>(end,<span class="number">0</span>,<span class="built_in">sizeof</span>(end));</span><br><span class="line">		len=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">int</span> id)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="type">long</span> <span class="type">long</span> x=a[id];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;i++)g[i]=x%<span class="number">2</span>,x/=<span class="number">2</span>;</span><br><span class="line">		<span class="type">int</span> now=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">60</span>;i&gt;=<span class="number">1</span>;i--)<span class="comment">//逆序!!1111</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!t[now][g[i]])t[now][g[i]]=len+<span class="number">1</span>,len++;</span><br><span class="line">			now=t[now][g[i]];</span><br><span class="line">		&#125;</span><br><span class="line">		end[now]=id;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="type">int</span> <span class="title">que</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;i++)g[i]=x%<span class="number">2</span>,x/=<span class="number">2</span>;</span><br><span class="line">		<span class="type">int</span> now=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">60</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(t[now][g[i]^<span class="number">1</span>])now=t[now][g[i]^<span class="number">1</span>];</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(t[now][g[i]])now=t[now][g[i]];</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> end[now];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;tr;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	fl[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(x!=<span class="number">1</span>)nxt[fa[x]]=x,x=fa[x],fl[x]=<span class="number">1</span>;</span><br><span class="line">	fl[y]=<span class="number">1</span>;<span class="comment">//</span></span><br><span class="line">	<span class="keyword">while</span>(!fl[fa[y]])</span><br><span class="line">	&#123;</span><br><span class="line">		nxt[fa[y]]=y;</span><br><span class="line">		fl[fa[y]]=<span class="number">1</span>,y=fa[y];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">find2</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(x!=<span class="number">1</span>)nxt[fa[x]]=x,x=fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	tr.<span class="built_in">ins</span>(x);</span><br><span class="line">	maxn=<span class="built_in">max</span>(maxn,a[x]^a[tr.<span class="built_in">que</span>(a[x])]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> v:g[x])<span class="built_in">dfs2</span>(v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ans[x]=maxn;</span><br><span class="line">	<span class="type">int</span> q=tr.<span class="built_in">que</span>(a[x]);</span><br><span class="line">	<span class="keyword">if</span>(q)maxn=<span class="built_in">max</span>(maxn,a[x]^a[q]);</span><br><span class="line">   <span class="comment">//注意一定要在有值的时候才更新，不然会被根和儿子相同的情况卡掉T^T</span></span><br><span class="line">	tr.<span class="built_in">ins</span>(x);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> v:g[x])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(v==nxt[x])<span class="keyword">continue</span>;</span><br><span class="line">		<span class="built_in">dfs2</span>(v);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(nxt[x])<span class="built_in">dfs</span>(nxt[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	tr.<span class="built_in">init</span>();</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;fa[i]);</span><br><span class="line">		g[fa[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">		<span class="type">int</span> id=tr.<span class="built_in">que</span>(a[i]);</span><br><span class="line">		tr.<span class="built_in">ins</span>(i);</span><br><span class="line">		<span class="keyword">if</span>(id&amp;&amp;(a[id]^a[i])&gt;=maxn)maxn=(a[id]^a[i]),mx=id,my=i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> mmm=maxn;</span><br><span class="line">	<span class="type">int</span> lca=<span class="built_in">find</span>(mx,my);<span class="comment">//找链</span></span><br><span class="line">	tr.<span class="built_in">init</span>();</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">	tr.<span class="built_in">init</span>();</span><br><span class="line">	<span class="built_in">find2</span>(lca);</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(!fl[i])ans[i]=mmm;<span class="comment">//不在链上</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
    </div>
</div>

<h2 id="P4735-最大异或和"><a href="#P4735-最大异或和" class="headerlink" title="P4735 最大异或和"></a><strong><a href="https://www.luogu.com.cn/problem/P4735">P4735 最大异或和</a></strong></h2><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        解析
    </div>
    <div class='spoiler-content'>
        <h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>可持久化 $01trie$ 板子。</p>
<p>维护一个前缀异或和序列 $b$，每个询问变为 $max_{l-1}^{r-1} \ b_i \oplus b_n \oplus x$，$b_n \oplus x$ 为定值，预处理即可。</p>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>code:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#define int long long</span></span><br><span class="line"><span class="comment">//#define int unsigned long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//const int p=415411;</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> iinf=<span class="number">2147483647</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> linf=<span class="number">9223372036854775807</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">6e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,m,len=<span class="number">1</span>,rt[N],t[N*<span class="number">30</span>][<span class="number">2</span>],a[N],qt=<span class="number">1</span>,cnt[N*<span class="number">30</span>],l,r,x;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">int</span> q,<span class="type">int</span> p,<span class="type">int</span> w,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(w&lt;<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line">	<span class="type">int</span> now=(x&gt;&gt;w)&amp;<span class="number">1</span>;</span><br><span class="line">	t[q][now^<span class="number">1</span>]=t[p][now^<span class="number">1</span>];</span><br><span class="line">	t[q][now]=qt;</span><br><span class="line">	qt++;</span><br><span class="line">	cnt[t[q][now]]=cnt[t[p][now]]+<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">ins</span>(t[q][now],t[p][now],w<span class="number">-1</span>,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">que</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> q,<span class="type">int</span> w,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(w&lt;<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> now=(x&gt;&gt;w)&amp;<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(cnt[t[q][now^<span class="number">1</span>]]&gt;cnt[t[p][now^<span class="number">1</span>]])<span class="keyword">return</span> (<span class="number">1</span>&lt;&lt;w)+<span class="built_in">que</span>(t[p][now^<span class="number">1</span>],t[q][now^<span class="number">1</span>],w<span class="number">-1</span>,x);</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">que</span>(t[p][now],t[q][now],w<span class="number">-1</span>,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">	rt[<span class="number">0</span>]=qt;</span><br><span class="line">	qt++;</span><br><span class="line">	<span class="built_in">ins</span>(rt[<span class="number">0</span>],<span class="number">0</span>,<span class="number">25</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">		a[i]^=a[i<span class="number">-1</span>];</span><br><span class="line">		rt[i]=qt;</span><br><span class="line">		qt++;</span><br><span class="line">		<span class="built_in">ins</span>(rt[i],rt[i<span class="number">-1</span>],<span class="number">25</span>,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(m--)</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;ch;</span><br><span class="line">		<span class="keyword">if</span>(ch==<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			cin&gt;&gt;x;</span><br><span class="line">			n++;</span><br><span class="line">			a[n]=a[n<span class="number">-1</span>]^x;</span><br><span class="line">			rt[n]=qt;</span><br><span class="line">			qt++;</span><br><span class="line">			<span class="built_in">ins</span>(rt[n],rt[n<span class="number">-1</span>],<span class="number">25</span>,a[n]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(ch==<span class="string">&#x27;Q&#x27;</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			cin&gt;&gt;l&gt;&gt;r&gt;&gt;x;</span><br><span class="line">			l--,r--;</span><br><span class="line">			<span class="keyword">if</span>(!l)cout&lt;&lt;<span class="built_in">que</span>(<span class="number">0</span>,rt[r],<span class="number">25</span>,x^a[n])&lt;&lt;endl;</span><br><span class="line">			<span class="keyword">else</span> cout&lt;&lt;<span class="built_in">que</span>(rt[l<span class="number">-1</span>],rt[r],<span class="number">25</span>,x^a[n])&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>

<p><a href="https://www.luogu.com.cn/problem/P5283">P5283 [十二省联考 2019] 异或粽子</a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
</search>
